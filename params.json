{"note":"Don't delete this file! It's used internally to help with page regeneration.","body":"Welcome to `world.db`\r\n=====================\r\n\r\nA free open world database & schema for use in any language\r\n\r\n\r\n## Usage\r\n\r\nGet a copy of the `world.db` file. That's it.\r\n\r\n![](https://raw.github.com/geraldb/world.db/master/i/sqlitestudio.png)\r\n\r\n## Demo\r\n\r\nTry the `world.db` Web Admin demo running\r\non Heroku [`worlddb.herokuapp.com`](http://worlddb.herokuapp.com).\r\n\r\n## Tables, Schema\r\n\r\nThe `world.db` includes the following tables:\r\n\r\n* countries\r\n* regions\r\n* cities\r\n* taggings\r\n* tags\r\n\r\n\r\n[add schema pic here]\r\n\r\n###  `countries` Table\r\n\r\n    CREATE TABLE \"countries\" (\r\n      \"id\" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,\r\n      \"title\" varchar(255) NOT NULL,\r\n      \"key\" varchar(255) NOT NULL,\r\n      \"tag\" varchar(255) NOT NULL,\r\n      \"synonyms\" varchar(255),\r\n      \"pop\" integer,\r\n      \"area\" integer,\r\n      \"created_at\" datetime NOT NULL,\r\n      \"updated_at\" datetime NOT NULL\r\n    );\r\n\r\n###  `regions` Table\r\n\r\n    CREATE TABLE \"regions\" (\r\n      \"id\" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,\r\n      \"title\" varchar(255) NOT NULL,\r\n      \"key\" varchar(255) NOT NULL,\r\n      \"synonyms\" varchar(255),\r\n      \"country_id\" integer NOT NULL,\r\n      \"pop\" integer, \"area\" integer,\r\n      \"created_at\" datetime NOT NULL,\r\n      \"updated_at\" datetime NOT NULL\r\n    );\r\n\r\n###  `cities` Table\r\n\r\n    CREATE TABLE \"cities\" (\r\n      \"id\" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,\r\n      \"title\" varchar(255) NOT NULL,\r\n      \"key\" varchar(255) NOT NULL,\r\n      \"synonyms\" varchar(255),\r\n      \"country_id\" integer NOT NULL,\r\n      \"region_id\" integer,\r\n      \"pop\" integer,\r\n      \"area\" integer,\r\n      \"capital\" boolean DEFAULT 'f' NOT NULL,\r\n      \"created_at\" datetime NOT NULL,\r\n      \"updated_at\" datetime NOT NULL\r\n    );\r\n\r\n\r\n## Command Line Tool\r\n\r\n    worlddb - world.db command line tool, version 0.3.0\r\n    \r\n    Usage: worlddb [options]\r\n            --create                     Create DB schema\r\n        -i, --include PATH               Data path (default is .)\r\n            --country KEY                Default country for regions 'n' cities\r\n            --countries                  Use country plain text fixture reader\r\n            --regions                    Use regions plain text fixture reader\r\n            --cities                     Use cities  plain text fixture reader\r\n            --load                       Use loader for builtin world data\r\n            --delete                     Delete all records\r\n        -v, --version                    Show version\r\n            --verbose                    Show debug trace\r\n        -h, --help                       Show this message\r\n    \r\n    \r\n    Examples:\r\n        worlddb at/cities                      # import austrian cities\r\n        worlddb --create                       # create database schema\r\n\r\n\r\n## Build Your Own `world.db` Version\r\n\r\nStep 1:  Create an empty database, that is, `world.db`. Issue the command:\r\n\r\n    worlddb --create\r\n\r\nStep 2:  Add your countries, regions and cities of choice. For example,\r\nlet's use the Austrian and German cities and regions:\r\n\r\n    worlddb --include <your_path_to_fixtures> at/regions at/cities de/regions de/cities\r\n\r\nThat's it.\r\n\r\n\r\n## Plain Text Fixtures\r\n\r\nThe `worlddb` command line tool lets you import fixtures (countries, regions, cities)\r\nin plain text. Example:\r\n\r\n[`america/countries.txt`](https://github.com/geraldb/world.db/blob/master/america/countries.txt):\r\n\r\n```\r\nca, Canada,        CAN, 9984670,  34278406, north america|en|fr\r\nmx, Mexico,        MEX, 1972550, 112322757, north america|en\r\nus, United States, USA, 9629091, 314167157, north america|es\r\n```\r\n\r\n[`europe/at/cities.txt`](https://github.com/geraldb/world.db/blob/master/europe/at/cities.txt):\r\n\r\n```\r\nwien,        Wien|Vienna,                  region:wien, 1664146\r\nstpoelten,   St. Pölten,                   region:noe,   51360\r\nwrneustadt,  Wiener Neustadt|Wr. Neustadt, region:noe,   39940\r\n```\r\n\r\nThe plain text format reader skips comments (starting with `#`)\r\nand blank lines. Example:\r\n\r\n```\r\n###################################################\r\n# Your comments here\r\n#\r\n```\r\n\r\n\r\n## Frequently asked questions (F.A.Q.s)\r\n\r\nQ: Why is Kanada spelled with a K and not a C? Why is Argentina spelled Argentien?\r\n\r\nA: Look for the English version. In the German version Canada is spelled Kanada\r\nand Argentina is spelled Argentinien.\r\n \r\nQ: Why is country X missing?\r\n\r\nA: It all started with Sportbook - an open source football pool for the Champions League.\r\nIs a club from country X playing in the  Champions League 2012/13 season? If, yes, it is included\r\nin the first commit. \r\n\r\n\r\n## Real World Usage\r\n\r\n[world.db.admin](https://github.com/geraldb/world.db.admin) - A free, open source web admin tool for world.db in Ruby on Rails (version 3.2 and up).\r\n\r\n[sport.db](https://github.com/geraldb/sport.db) - A free, open sports database & schema.\r\n\r\n[Sportbook](http://geraldb.github.com/sportbook) - A free, open source sports betting pool\r\nin Ruby on Rails (version 3.2 and up). \r\n\r\n\r\n## Alternatives\r\n\r\n[geonames.org](http://geonames.org) - open geo (geographical) database covers all countries and contains over eight million placenames\r\n\r\n[worlddb](http://code.google.com/p/worlddb) -  open world database alpha; includes country, region & city names in many languages names and latitude and longitude numbers and country's iso 2-letter code.\r\n\r\n[countries](https://github.com/hexorx/countries) - world countries; includes data from ISO 3166 (countries and states/subdivisions ), ISO 4217 (currency), and E.164 (phone numbers).\r\n\r\n[countries](https://github.com/mledoze/countries) - world countries with iso codes, currencies and more in JSON, CSV and XML.\r\n\r\n[django-cities](https://github.com/coderholic/django-cities) - python script for importing countries, regions, cities etc. from geonames.org\r\n\r\n[current-countries-of-earth](https://github.com/ewheeler/current-countries-of-earth) - python script to fetch current ISO 3166 country info; output as JSON\r\n\r\n\r\n\r\n## Thank You - Contributors - ¡Gracias! - Obrigado - Danke\r\n\r\nErnesto Chapon - William de Melo Gueiros\r\n\r\n## License\r\n\r\nThe `world.db` schema, data and scripts are dedicated to the public domain.\r\nUse it as you please with no restrictions whatsoever.\r\n\r\n## Questions? Comments?\r\n\r\nSend them along to the [Open Sports Database & Friends Forum/Mailing List](http://groups.google.com/group/opensport). Thanks!","tagline":"Open World Database & Schema","name":"world.db","google":""}